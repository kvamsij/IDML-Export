// Generated by https://quicktype.io

export type CellStyle = {
  Self: string;
  AppliedParagraphStyle: string;
  Name: string;
};
export type RootCellStyleGroup = {
  CellStyle: CellStyle;
  Self: string;
};

export enum GradientFillStart {
  The00 = '0 0',
}

export enum KerningMethod {
  IDNone = '$ID/None',
  IDOptical = '$ID/Optical',
}

export enum PurpleType {
  Enumeration = 'enumeration',
  Object = 'object',
  String = 'string',
}
export type TartuGecko = {
  '#text': string;
  type: PurpleType;
};

export enum LeadingType {
  Enumeration = 'enumeration',
  Unit = 'unit',
}
export type Leading = {
  '#text': number | string;
  type: LeadingType;
};
export type CharacterStyleProperties = {
  BasedOn: TartuGecko;
  PreviewColor: TartuGecko;
  Leading: Leading;
  AppliedFont: TartuGecko;
  UnderlineColor?: TartuGecko;
  UnderlineGapColor?: TartuGecko;
  UnderlineType?: TartuGecko;
  StrikeThroughColor?: TartuGecko;
  StrikeThroughGapColor?: TartuGecko;
  StrikeThroughType?: TartuGecko;
  RubyFill?: TartuGecko;
  RubyStroke?: TartuGecko;
  KentenFillColor?: TartuGecko;
  KentenStrokeColor?: TartuGecko;
};

export type CharacterStyle = {
  Self: string;
  Imported: string;
  Name: string;
  Properties?: CharacterStyleProperties;
  KeyboardShortcut?: GradientFillStart;
  FillColor?: string;
  FontStyle?: string;
  PointSize?: string;
  KerningMethod?: KerningMethod;
  Tracking?: string;
  Capitalization?: string;
  KerningValue?: string;
  Position?: string;
  HorizontalScale?: string;
  Ligatures?: string;
  StrokeWeight?: string;
  BaselineShift?: string;
  StrokeColor?: string;
  VerticalScale?: string;
  AppliedLanguage?: string;
  NoBreak?: string;
  Underline?: string;
  OTFFigureStyle?: string;
  StrikeThru?: string;
  CharacterAlignment?: string;
  StrokeTint?: string;
  FillTint?: string;
  OverprintStroke?: string;
  OverprintFill?: string;
  GradientStrokeAngle?: string;
  GradientFillAngle?: string;
  GradientStrokeLength?: string;
  GradientFillLength?: string;
  GradientStrokeStart?: GradientFillStart;
  GradientFillStart?: GradientFillStart;
  Skew?: string;
  OTFOrdinal?: string;
  OTFFraction?: string;
  OTFDiscretionaryLigature?: string;
  OTFTitling?: string;
  PositionalForm?: string;
  OTFMark?: string;
  OTFLocale?: string;
  OTFSlashedZero?: string;
  OTFStylisticSets?: string;
  OTFHistorical?: string;
  OTFContextualAlternate?: string;
  UnderlineGapOverprint?: string;
  UnderlineGapTint?: string;
  UnderlineOffset?: string;
  UnderlineOverprint?: string;
  UnderlineTint?: string;
  UnderlineWeight?: string;
  StrikeThroughGapOverprint?: string;
  StrikeThroughGapTint?: string;
  StrikeThroughOffset?: string;
  StrikeThroughOverprint?: string;
  StrikeThroughTint?: string;
  StrikeThroughWeight?: string;
  OTFSwash?: string;
  Tsume?: string;
  LeadingAki?: string;
  TrailingAki?: string;
  RubyOpenTypePro?: string;
  RubyFontSize?: string;
  RubyAlignment?: string;
  RubyType?: string;
  RubyParentSpacing?: string;
  RubyXScale?: string;
  RubyYScale?: string;
  RubyXOffset?: string;
  RubyYOffset?: string;
  RubyPosition?: string;
  RubyAutoAlign?: string;
  RubyParentOverhangAmount?: string;
  RubyOverhang?: string;
  RubyAutoScaling?: string;
  RubyParentScalingPercent?: string;
  RubyTint?: string;
  RubyOverprintFill?: string;
  RubyStrokeTint?: string;
  RubyOverprintStroke?: string;
  RubyWeight?: string;
  KentenKind?: string;
  KentenFontSize?: string;
  KentenXScale?: string;
  KentenYScale?: string;
  KentenPlacement?: string;
  KentenAlignment?: string;
  KentenPosition?: string;
  KentenCustomCharacter?: string;
  KentenCharacterSet?: string;
  KentenTint?: string;
  KentenOverprintFill?: string;
  KentenStrokeTint?: string;
  KentenOverprintStroke?: string;
  KentenWeight?: string;
  Tatechuyoko?: string;
  TatechuyokoXOffset?: string;
  TatechuyokoYOffset?: string;
  Jidori?: string;
  CharacterRotation?: string;
  ShataiMagnification?: string;
  ShataiDegreeAngle?: string;
  ShataiAdjustTsume?: string;
  ShataiAdjustRotation?: string;
  Warichu?: string;
  WarichuLines?: string;
  WarichuSize?: string;
  WarichuLineSpacing?: string;
  WarichuAlignment?: string;
  WarichuCharsBeforeBreak?: string;
  WarichuCharsAfterBreak?: string;
  OTFHVKana?: string;
  OTFProportionalMetrics?: string;
  OTFRomanItalics?: string;
  ScaleAffectsLineHeight?: string;
  CjkGridTracking?: string;
  GlyphForm?: string;
  RubyAutoTcyDigits?: string;
  RubyAutoTcyIncludeRoman?: string;
  RubyAutoTcyAutoScale?: string;
};
export type RootCharacterStyleGroup = {
  CharacterStyle: CharacterStyle[];
  Self: string;
};

export type BaselineFrameGridOptionProperties = {
  BaselineFrameGridColor: TartuGecko;
};
export type BaselineFrameGridOption = {
  Properties: BaselineFrameGridOptionProperties;
  UseCustomBaselineFrameGrid: string;
  StartingOffsetForBaselineFrameGrid: string;
  BaselineFrameGridRelativeOption: string;
  BaselineFrameGridIncrement: string;
};

export type FrameFittingOption = {
  AutoFit: string;
  LeftCrop: string;
  TopCrop: string;
  RightCrop: string;
  BottomCrop: string;
  FittingOnEmptyFrame: string;
  FittingAlignment: string;
};

export type ObjectStyleEffectsCategorySettings = {
  EnableTransparency: string;
  EnableDropShadow: string;
  EnableFeather: string;
  EnableInnerShadow: string;
  EnableOuterGlow: string;
  EnableInnerGlow: string;
  EnableBevelEmboss: string;
  EnableSatin: string;
  EnableDirectionalFeather: string;
  EnableGradientFeather: string;
};

export type ObjectStyleProperties = {
  BasedOn: TartuGecko;
};

export type StoryPreference = {
  OpticalMarginAlignment: string;
  OpticalMarginSize: string;
  FrameType: string;
  StoryOrientation: string;
  StoryDirection: string;
};

export type ListItem = {
  '#text': number;
  type: LeadingType;
};
export type InsetSpacing = {
  ListItem: ListItem[];
  type: string;
};
export type TextFramePreferenceProperties = {
  InsetSpacing: InsetSpacing;
};
export type TextFramePreference = {
  Properties: TextFramePreferenceProperties;
  TextColumnCount: string;
  TextColumnGutter: string;
  TextColumnFixedWidth: string;
  UseFixedColumnWidth: string;
  FirstBaselineOffset: string;
  MinimumFirstBaselineOffset: string;
  VerticalJustification: string;
  VerticalThreshold: string;
  IgnoreWrap: string;
  UseFlexibleColumnWidth: string;
  TextColumnMaxWidth: string;
  AutoSizingType: string;
  AutoSizingReferencePoint: string;
  UseMinimumHeightForAutoSizing: string;
  MinimumHeightForAutoSizing: string;
  UseMinimumWidthForAutoSizing: string;
  MinimumWidthForAutoSizing: string;
  UseNoLineBreaksForAutoSizing: string;
  VerticalBalanceColumns: string;
};

export type ContourOption = {
  ContourType: string;
  IncludeInsideEdges: string;
  ContourPathName: string;
};

export type TextWrapOffset = {
  Top: string;
  Left: string;
  Bottom: string;
  Right: string;
};

export type TextWrapPreferenceProperties = {
  TextWrapOffset: TextWrapOffset;
};
export type TextWrapPreference = {
  Properties: TextWrapPreferenceProperties;
  ContourOption: ContourOption;
  Inverse: string;
  ApplyToMasterPageOnly: string;
  TextWrapSide: string;
  TextWrapMode: string;
};
export type ObjectStyle = {
  TextFramePreference: TextFramePreference;
  BaselineFrameGridOption: BaselineFrameGridOption;
  AnchoredObjectSetting: { [key: string]: string };
  TextWrapPreference: TextWrapPreference;
  StoryPreference: StoryPreference;
  FrameFittingOption: FrameFittingOption;
  Self: string;
  Name: string;
  AppliedParagraphStyle: string;
  CornerRadius: string;
  FillColor: string;
  FillTint: string;
  StrokeWeight: string;
  MiterLimit: string;
  EndCap: string;
  EndJoin: string;
  StrokeType: string;
  LeftLineEnd: string;
  RightLineEnd: string;
  StrokeColor: string;
  StrokeTint: string;
  GapColor: string;
  GapTint: string;
  StrokeAlignment: string;
  Nonprinting: string;
  GradientFillAngle: string;
  GradientStrokeAngle: string;
  AppliedNamedGrid: string;
  TopLeftCornerOption: string;
  TopRightCornerOption: string;
  BottomLeftCornerOption: string;
  BottomRightCornerOption: string;
  TopLeftCornerRadius: string;
  TopRightCornerRadius: string;
  BottomLeftCornerRadius: string;
  BottomRightCornerRadius: string;
  CornerOption: string;
  Properties?: ObjectStyleProperties;
  ObjectStyleObjectEffectsCategorySettings?: ObjectStyleEffectsCategorySettings;
  ObjectStyleStrokeEffectsCategorySettings?: ObjectStyleEffectsCategorySettings;
  ObjectStyleFillEffectsCategorySettings?: ObjectStyleEffectsCategorySettings;
  ObjectStyleContentEffectsCategorySettings?: ObjectStyleEffectsCategorySettings;
  EnableTextFrameAutoSizingOptions?: string;
  ApplyNextParagraphStyle?: string;
  EnableFill?: string;
  EnableStroke?: string;
  EnableParagraphStyle?: string;
  EnableTextFrameGeneralOptions?: string;
  EnableTextFrameBaselineOptions?: string;
  EnableStoryOptions?: string;
  EnableTextWrapAndOthers?: string;
  EnableAnchoredObjectOptions?: string;
  OverprintStroke?: string;
  KeyboardShortcut?: GradientFillStart;
  EnableFrameFittingOptions?: string;
  EnableStrokeAndCornerOptions?: string;
};
export type RootObjectStyleGroup = {
  ObjectStyle: ObjectStyle[];
  Self: string;
};
export type BulletChar = {
  BulletCharacterType: string;
  BulletCharacterValue: string;
};
export type TabList = {
  type: string;
};
export type NumberingRestartPolicies = {
  RestartPolicy: string;
  LowerLevel: string;
  UpperLevel: string;
};
export type ParagraphStyleProperties = {
  Leading?: TartuGecko;
  TabList?: TabList;
  AppliedFont?: TartuGecko;
  RuleAboveColor?: TartuGecko;
  RuleBelowColor?: TartuGecko;
  RuleAboveType?: TartuGecko;
  RuleBelowType?: TartuGecko;
  BalanceRaggedLines?: TartuGecko;
  RuleAboveGapColor?: TartuGecko;
  RuleBelowGapColor?: TartuGecko;
  UnderlineColor?: TartuGecko;
  UnderlineGapColor?: TartuGecko;
  UnderlineType?: TartuGecko;
  StrikeThroughColor?: TartuGecko;
  StrikeThroughGapColor?: TartuGecko;
  StrikeThroughType?: TartuGecko;
  SpanSplitColumnCount?: TartuGecko;
  Mojikumi?: TartuGecko;
  KinsokuSet?: TartuGecko;
  RubyFont?: TartuGecko;
  RubyFontStyle?: TartuGecko;
  RubyFill?: TartuGecko;
  RubyStroke?: TartuGecko;
  KentenFont?: TartuGecko;
  KentenFontStyle?: TartuGecko;
  KentenFillColor?: TartuGecko;
  KentenStrokeColor?: TartuGecko;
  BulletChar?: BulletChar;
  NumberingFormat?: TartuGecko;
  BulletsFont?: TartuGecko;
  BulletsFontStyle?: TartuGecko;
  AppliedNumberingList?: TartuGecko;
  NumberingRestartPolicies?: NumberingRestartPolicies;
  BulletsCharacterStyle?: TartuGecko;
  NumberingCharacterStyle?: TartuGecko;
  BasedOn?: TartuGecko;
  PreviewColor?: TartuGecko;
};

export type ParagraphStyle = {
  Properties: ParagraphStyleProperties;
  Self: string;
  Name: string;
  Imported: string;
  FillColor?: string;
  FontStyle?: string;
  PointSize?: string;
  HorizontalScale?: string;
  KerningMethod?: string;
  Ligatures?: string;
  PageNumberType?: string;
  StrokeWeight?: string;
  Tracking?: string;
  Composer?: string;
  DropCapCharacters?: string;
  DropCapLines?: string;
  BaselineShift?: string;
  Capitalization?: string;
  StrokeColor?: string;
  HyphenateLadderLimit?: string;
  VerticalScale?: string;
  LeftIndent?: string;
  RightIndent?: string;
  FirstLineIndent?: string;
  AutoLeading?: string;
  AppliedLanguage?: string;
  Hyphenation?: string;
  HyphenateAfterFirst?: string;
  HyphenateBeforeLast?: string;
  HyphenateCapitalizedWords?: string;
  HyphenateWordsLongerThan?: string;
  NoBreak?: string;
  HyphenationZone?: string;
  SpaceBefore?: string;
  SpaceAfter?: string;
  Underline?: string;
  OTFFigureStyle?: string;
  DesiredWordSpacing?: string;
  MaximumWordSpacing?: string;
  MinimumWordSpacing?: string;
  DesiredLetterSpacing?: string;
  MaximumLetterSpacing?: string;
  MinimumLetterSpacing?: string;
  DesiredGlyphScaling?: string;
  MaximumGlyphScaling?: string;
  MinimumGlyphScaling?: string;
  StartParagraph?: string;
  KeepAllLinesTogether?: string;
  KeepWithNext?: string;
  KeepFirstLines?: string;
  KeepLastLines?: string;
  Position?: string;
  StrikeThru?: string;
  CharacterAlignment?: string;
  KeepLinesTogether?: string;
  StrokeTint?: string;
  FillTint?: string;
  OverprintStroke?: string;
  OverprintFill?: string;
  GradientStrokeAngle?: string;
  GradientFillAngle?: string;
  GradientStrokeLength?: string;
  GradientFillLength?: string;
  GradientStrokeStart?: GradientFillStart;
  GradientFillStart?: GradientFillStart;
  Skew?: string;
  RuleAboveLineWeight?: string;
  RuleAboveTint?: string;
  RuleAboveOffset?: string;
  RuleAboveLeftIndent?: string;
  RuleAboveRightIndent?: string;
  RuleAboveWidth?: string;
  RuleBelowLineWeight?: string;
  RuleBelowTint?: string;
  RuleBelowOffset?: string;
  RuleBelowLeftIndent?: string;
  RuleBelowRightIndent?: string;
  RuleBelowWidth?: string;
  RuleAboveOverprint?: string;
  RuleBelowOverprint?: string;
  RuleAbove?: string;
  RuleBelow?: string;
  LastLineIndent?: string;
  HyphenateLastWord?: string;
  ParagraphBreakType?: string;
  SingleWordJustification?: string;
  OTFOrdinal?: string;
  OTFFraction?: string;
  OTFDiscretionaryLigature?: string;
  OTFTitling?: string;
  RuleAboveGapTint?: string;
  RuleAboveGapOverprint?: string;
  RuleBelowGapTint?: string;
  RuleBelowGapOverprint?: string;
  Justification?: string;
  DropcapDetail?: string;
  PositionalForm?: string;
  OTFMark?: string;
  HyphenWeight?: string;
  OTFLocale?: string;
  HyphenateAcrossColumns?: string;
  KeepRuleAboveInFrame?: string;
  IgnoreEdgeAlignment?: string;
  OTFSlashedZero?: string;
  OTFStylisticSets?: string;
  OTFHistorical?: string;
  OTFContextualAlternate?: string;
  UnderlineGapOverprint?: string;
  UnderlineGapTint?: string;
  UnderlineOffset?: string;
  UnderlineOverprint?: string;
  UnderlineTint?: string;
  UnderlineWeight?: string;
  StrikeThroughGapOverprint?: string;
  StrikeThroughGapTint?: string;
  StrikeThroughOffset?: string;
  StrikeThroughOverprint?: string;
  StrikeThroughTint?: string;
  StrikeThroughWeight?: string;
  MiterLimit?: string;
  StrokeAlignment?: string;
  EndJoin?: string;
  SpanColumnType?: string;
  SplitColumnInsideGutter?: string;
  SplitColumnOutsideGutter?: string;
  KeepWithPrevious?: string;
  SpanColumnMinSpaceBefore?: string;
  SpanColumnMinSpaceAfter?: string;
  OTFSwash?: string;
  Tsume?: string;
  LeadingAki?: string;
  TrailingAki?: string;
  KinsokuType?: string;
  KinsokuHangType?: string;
  BunriKinshi?: string;
  RubyOpenTypePro?: string;
  RubyFontSize?: string;
  RubyAlignment?: string;
  RubyType?: string;
  RubyParentSpacing?: string;
  RubyXScale?: string;
  RubyYScale?: string;
  RubyXOffset?: string;
  RubyYOffset?: string;
  RubyPosition?: string;
  RubyAutoAlign?: string;
  RubyParentOverhangAmount?: string;
  RubyOverhang?: string;
  RubyAutoScaling?: string;
  RubyParentScalingPercent?: string;
  RubyTint?: string;
  RubyOverprintFill?: string;
  RubyStrokeTint?: string;
  RubyOverprintStroke?: string;
  RubyWeight?: string;
  KentenKind?: string;
  KentenFontSize?: string;
  KentenXScale?: string;
  KentenYScale?: string;
  KentenPlacement?: string;
  KentenAlignment?: string;
  KentenPosition?: string;
  KentenCustomCharacter?: string;
  KentenCharacterSet?: string;
  KentenTint?: string;
  KentenOverprintFill?: string;
  KentenStrokeTint?: string;
  KentenOverprintStroke?: string;
  KentenWeight?: string;
  Tatechuyoko?: string;
  TatechuyokoXOffset?: string;
  TatechuyokoYOffset?: string;
  AutoTcy?: string;
  AutoTcyIncludeRoman?: string;
  Jidori?: string;
  GridGyoudori?: string;
  GridAlignFirstLineOnly?: string;
  GridAlignment?: string;
  CharacterRotation?: string;
  RotateSingleByteCharacters?: string;
  Rensuuji?: string;
  ShataiMagnification?: string;
  ShataiDegreeAngle?: string;
  ShataiAdjustTsume?: string;
  ShataiAdjustRotation?: string;
  Warichu?: string;
  WarichuLines?: string;
  WarichuSize?: string;
  WarichuLineSpacing?: string;
  WarichuAlignment?: string;
  WarichuCharsBeforeBreak?: string;
  WarichuCharsAfterBreak?: string;
  OTFHVKana?: string;
  OTFProportionalMetrics?: string;
  OTFRomanItalics?: string;
  LeadingModel?: string;
  ScaleAffectsLineHeight?: string;
  ParagraphGyoudori?: string;
  CjkGridTracking?: string;
  GlyphForm?: string;
  RubyAutoTcyDigits?: string;
  RubyAutoTcyIncludeRoman?: string;
  RubyAutoTcyAutoScale?: string;
  TreatIdeographicSpaceAsSpace?: string;
  AllowArbitraryHyphenation?: string;
  BulletsAndNumberingListType?: string;
  NumberingStartAt?: string;
  NumberingLevel?: string;
  NumberingContinue?: string;
  NumberingApplyRestartPolicy?: string;
  BulletsAlignment?: string;
  NumberingAlignment?: string;
  NumberingExpression?: string;
  BulletsTextAfter?: string;
  DigitsType?: string;
  Kashidas?: string;
  DiacriticPosition?: string;
  CharacterDirection?: string;
  ParagraphDirection?: string;
  ParagraphJustification?: string;
  ParagraphKashidaWidth?: string;
  XOffsetDiacritic?: string;
  YOffsetDiacritic?: string;
  OTFOverlapSwash?: string;
  OTFStylisticAlternate?: string;
  OTFJustificationAlternate?: string;
  OTFStretchedAlternate?: string;
  KeyboardDirection?: string;
  NextStyle?: string;
  KeyboardShortcut?: GradientFillStart;
};
export type RootParagraphStyleGroup = {
  ParagraphStyle: ParagraphStyle[];
  Self: string;
};

export type TableStyle = {
  Self: string;
  Name: string;
  StrokeOrder?: string;
  TopBorderStrokeWeight?: string;
  TopBorderStrokeType?: string;
  TopBorderStrokeColor?: string;
  TopBorderStrokeTint?: string;
  TopBorderStrokeOverprint?: string;
  TopBorderStrokeGapColor?: string;
  TopBorderStrokeGapTint?: string;
  TopBorderStrokeGapOverprint?: string;
  LeftBorderStrokeWeight?: string;
  LeftBorderStrokeType?: string;
  LeftBorderStrokeColor?: string;
  LeftBorderStrokeTint?: string;
  LeftBorderStrokeOverprint?: string;
  LeftBorderStrokeGapColor?: string;
  LeftBorderStrokeGapTint?: string;
  LeftBorderStrokeGapOverprint?: string;
  BottomBorderStrokeWeight?: string;
  BottomBorderStrokeType?: string;
  BottomBorderStrokeColor?: string;
  BottomBorderStrokeTint?: string;
  BottomBorderStrokeOverprint?: string;
  BottomBorderStrokeGapColor?: string;
  BottomBorderStrokeGapTint?: string;
  BottomBorderStrokeGapOverprint?: string;
  RightBorderStrokeWeight?: string;
  RightBorderStrokeType?: string;
  RightBorderStrokeColor?: string;
  RightBorderStrokeTint?: string;
  RightBorderStrokeOverprint?: string;
  RightBorderStrokeGapColor?: string;
  RightBorderStrokeGapTint?: string;
  RightBorderStrokeGapOverprint?: string;
  SpaceBefore?: string;
  SpaceAfter?: string;
  SkipFirstAlternatingStrokeRows?: string;
  SkipLastAlternatingStrokeRows?: string;
  StartRowStrokeCount?: string;
  StartRowStrokeColor?: string;
  StartRowStrokeWeight?: string;
  StartRowStrokeType?: string;
  StartRowStrokeTint?: string;
  StartRowStrokeGapOverprint?: string;
  StartRowStrokeGapColor?: string;
  StartRowStrokeGapTint?: string;
  StartRowStrokeOverprint?: string;
  EndRowStrokeCount?: string;
  EndRowStrokeColor?: string;
  EndRowStrokeWeight?: string;
  EndRowStrokeType?: string;
  EndRowStrokeTint?: string;
  EndRowStrokeOverprint?: string;
  EndRowStrokeGapColor?: string;
  EndRowStrokeGapTint?: string;
  EndRowStrokeGapOverprint?: string;
  SkipFirstAlternatingStrokeColumns?: string;
  SkipLastAlternatingStrokeColumns?: string;
  StartColumnStrokeCount?: string;
  StartColumnStrokeColor?: string;
  StartColumnStrokeWeight?: string;
  StartColumnStrokeType?: string;
  StartColumnStrokeTint?: string;
  StartColumnStrokeOverprint?: string;
  StartColumnStrokeGapColor?: string;
  StartColumnStrokeGapTint?: string;
  StartColumnStrokeGapOverprint?: string;
  EndColumnStrokeCount?: string;
  EndColumnStrokeColor?: string;
  EndColumnStrokeWeight?: string;
  EndColumnLineStyle?: string;
  EndColumnStrokeTint?: string;
  EndColumnStrokeOverprint?: string;
  EndColumnStrokeGapColor?: string;
  EndColumnStrokeGapTint?: string;
  EndColumnStrokeGapOverprint?: string;
  ColumnFillsPriority?: string;
  SkipFirstAlternatingFillRows?: string;
  SkipLastAlternatingFillRows?: string;
  StartRowFillColor?: string;
  StartRowFillCount?: string;
  StartRowFillTint?: string;
  StartRowFillOverprint?: string;
  EndRowFillCount?: string;
  EndRowFillColor?: string;
  EndRowFillTint?: string;
  EndRowFillOverprint?: string;
  SkipFirstAlternatingFillColumns?: string;
  SkipLastAlternatingFillColumns?: string;
  StartColumnFillCount?: string;
  StartColumnFillColor?: string;
  StartColumnFillTint?: string;
  StartColumnFillOverprint?: string;
  EndColumnFillCount?: string;
  EndColumnFillColor?: string;
  EndColumnFillTint?: string;
  EndColumnFillOverprint?: string;
  HeaderRegionSameAsBodyRegion?: string;
  FooterRegionSameAsBodyRegion?: string;
  LeftColumnRegionSameAsBodyRegion?: string;
  RightColumnRegionSameAsBodyRegion?: string;
  HeaderRegionCellStyle?: string;
  FooterRegionCellStyle?: string;
  LeftColumnRegionCellStyle?: string;
  RightColumnRegionCellStyle?: string;
  BodyRegionCellStyle?: string;
  Properties?: ObjectStyleProperties;
  KeyboardShortcut?: GradientFillStart;
};
export type RootTableStyleGroup = {
  TableStyle: TableStyle[];
  Self: string;
};

export type IDPkgStyles = {
  RootCharacterStyleGroup: RootCharacterStyleGroup;
  RootParagraphStyleGroup: RootParagraphStyleGroup;
  TOCStyle: { [key: string]: string };
  RootCellStyleGroup: RootCellStyleGroup;
  RootTableStyleGroup: RootTableStyleGroup;
  RootObjectStyleGroup: RootObjectStyleGroup;
  TrapPreset: { [key: string]: string }[];
  'xmlns:idPkg': string;
  DOMVersion: string;
};
export type IDMLStyles = {
  'idPkg:Styles': IDPkgStyles;
};
